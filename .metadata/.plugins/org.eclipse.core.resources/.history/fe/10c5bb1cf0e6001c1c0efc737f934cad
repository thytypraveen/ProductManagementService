package com.ItemCommentService.service;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.ItemCommentService.repository.ItemRepository;
import com.ItemCommentService.repository.UserRepository;
import com.ItemCommentsService.entity.Item;
import com.ItemCommentsService.entity.User;

import ItemcommentService.exception.ResourceNotFoundException;

@Service
public class ItemService {
	 @Autowired
	    private ItemRepository itemRepository;

	    @Autowired
	    private UserRepository userRepository;


	public Optional<Item> addItem(Long id, Item item) {
        return Optional.ofNullable(userRepository.findById(id).map(user -> {
            item.setUser(user);
            return itemRepository.save(item);
        }).orElseThrow(() -> new ResourceNotFoundException("UserId" + id + "Not Found")));
    }
	
	public void update(Long id, Long itemId, Item item){
        List<Item> m = getItemById(id);
        Iterator<Item> itr = m.listIterator();
        while (itr.hasNext()){
            Item itm;
          itm =  itr.next();
          itm.setTitle(item.getTitle());
          itm.setDescription(item.getDescription());
            Date d1 = new Date();
            itemRepository.save(itm);
        }
	}

	public List<Item> getItemById(Long id) {
        List<Item> l1 = getAll(id);
		return l1;
	}

	 public List<Item> getAll(Long id){
	      User u =  userRepository.findById(id).get();
    return itemRepository.findAll().stream().filter(item -> item.getUser().equals(u)).collect(Collectors.toList());
   }

	public Item getByItemId(long id) {
		// TODO Auto-generated method stub
		return itemRepository.getById(id);
	}

	
}
